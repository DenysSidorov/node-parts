1. const stream = require('stream');
2. const fs = require('fs');
3. const os = require('os');
4. 
5. class LineNumberStream extends stream.Transform {
6.   constructor(options) {
7.     super(options);
8. 
9.     this.isFileBegins = true;
10.     this.line = 1;
11.   }
12. 
13.   _transform(chunk, encoding, callback) {
14.     let str = chunk.toString('utf-8');
15. 
16.     if (this.isFileBegins) {
17.       str = `${this.line++}. ${str}`;
18.       this.isFileBegins = false;
19.     }
20. 
21.     let pieces = str.split(os.EOL);
22. 
23.     if (pieces.length === 0) {
24.       return callback(null, Buffer.from(str));
25.     }
26. 
27.     let newStr = pieces.reduce((_newStr, piece, i) => {
28.       if (i === 0)
29.         _newStr = piece;
30.       else
31.         _newStr = `${_newStr}${os.EOL}${this.line++}. ${piece}`;
32. 
33.       return _newStr;
34.     }, '');
35. 
36.     callback(null, Buffer.from(newStr));
37.   }
38. }
39. 
40. const s = fs.createReadStream(__filename, {
41.   highWaterMark: 10
42. });
43. const o = fs.createWriteStream(`${__filename}.out`);
44. 
45. s
46.   .pipe(new LineNumberStream())
47.   .pipe(o);
48. 